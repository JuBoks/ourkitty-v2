pipeline { 
  agent any
  
  stages {
    stage('Remove') {
      steps {
        script {
          // Network에서 DB제거
          def NETWORK = sh(returnStdout: true, script: "docker network ls | grep prod | awk '{if(NR>0) print \$2}'")
          if(NETWORK.trim().length() > 0) {
            sh(returnStdout: false, script: "docker network disconnect prod db-prod")
            println("Deleting DB Container from Network... prod")
          }

          sh(returnStdout: false, script: "docker-compose -f docker-compose-prod.yml down --rmi all")
        }
      }
    }

    stage('Build Backend Project') {
      steps {
        dir("ourkitty"){
          sh 'chmod +x gradlew'
          sh  './gradlew clean bootjar'
        }
      }
    }

    stage('Build') {
      steps {
        // 운영서버
        sh 'docker-compose -f docker-compose-prod.yml build'
      }
    }

    stage('Deploy') {
      steps {
        // 운영서버
        sh 'docker-compose -f docker-compose-prod.yml up -d'
      }
    }

    stage('Add Db on Network') {
      steps {
        sh(returnStdout: true, script: "docker network connect prod db-prod")
      }
    }

  }

}